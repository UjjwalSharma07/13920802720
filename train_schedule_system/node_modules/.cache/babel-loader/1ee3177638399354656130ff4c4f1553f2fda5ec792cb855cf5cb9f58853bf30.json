{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Documents\\\\TRAIN_SCHEDULE_SYSTEM\\\\train_schedule_system\\\\src\\\\pages\\\\AllTrainPage\\\\AllTrainsPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AllTrainsPage = () => {\n  _s();\n  const [trains, setTrains] = useState([]);\n  useEffect(() => {\n    // Fetch all trains from the API when the component mounts\n    ApiService.getAllTrains().then(data => {\n      // Apply sorting and filtering logic to 'data'\n      const filteredTrains = data.filter(train => isTrainDepartingInNext30Minutes(train.departureTime) === false);\n      const sortedTrains = filteredTrains.sort((a, b) => {\n        // Sort by price in ascending order\n        if (a.prices.sleeper < b.prices.sleeper) return -1;\n        if (a.prices.sleeper > b.prices.sleeper) return 1;\n        // Sort by tickets in descending order\n        if (a.tickets > b.tickets) return -1;\n        if (a.tickets < b.tickets) return 1;\n        // Sort by departure time in descending order\n        const aDepartureTime = calculateDepartureTimeWithDelay(a);\n        const bDepartureTime = calculateDepartureTimeWithDelay(b);\n        return bDepartureTime - aDepartureTime;\n      });\n      setTrains(sortedTrains);\n    }).catch(error => {\n      // Handle error\n      console.error('Error fetching trains:', error);\n    });\n  }, []);\n  const isTrainDepartingInNext30Minutes = departureTime => {\n    const now = new Date();\n    const departure = new Date(departureTime);\n    const minutesDifference = (departure - now) / 60000; // 1 minute = 60000 ms\n    return minutesDifference <= 30;\n  };\n  const calculateDepartureTimeWithDelay = train => {\n    const departure = new Date(train.departureTime);\n    const delayMinutes = train.delays ? train.delays : 0;\n    return departure.getTime() + delayMinutes * 60000; // 1 minute = 60000 ms\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"all-trains-page\",\n    children: trains.map(train => /*#__PURE__*/_jsxDEV(TrainCard, {\n      train: train\n    }, train.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(AllTrainsPage, \"b108wzI25qLIUDtvQA3yPWDuTsA=\");\n_c = AllTrainsPage;\nexport default AllTrainsPage;\nvar _c;\n$RefreshReg$(_c, \"AllTrainsPage\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","AllTrainsPage","_s","trains","setTrains","ApiService","getAllTrains","then","data","filteredTrains","filter","train","isTrainDepartingInNext30Minutes","departureTime","sortedTrains","sort","a","b","prices","sleeper","tickets","aDepartureTime","calculateDepartureTimeWithDelay","bDepartureTime","catch","error","console","now","Date","departure","minutesDifference","delayMinutes","delays","getTime","className","children","map","TrainCard","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/hp/Documents/TRAIN_SCHEDULE_SYSTEM/train_schedule_system/src/pages/AllTrainPage/AllTrainsPage.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\n\r\nconst AllTrainsPage = () => {\r\n  const [trains, setTrains] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // Fetch all trains from the API when the component mounts\r\n    ApiService.getAllTrains()\r\n      .then((data) => {\r\n        // Apply sorting and filtering logic to 'data'\r\n        const filteredTrains = data.filter(\r\n          (train) => isTrainDepartingInNext30Minutes(train.departureTime) === false\r\n        );\r\n\r\n        const sortedTrains = filteredTrains.sort((a, b) => {\r\n          // Sort by price in ascending order\r\n          if (a.prices.sleeper < b.prices.sleeper) return -1;\r\n          if (a.prices.sleeper > b.prices.sleeper) return 1;\r\n          // Sort by tickets in descending order\r\n          if (a.tickets > b.tickets) return -1;\r\n          if (a.tickets < b.tickets) return 1;\r\n          // Sort by departure time in descending order\r\n          const aDepartureTime = calculateDepartureTimeWithDelay(a);\r\n          const bDepartureTime = calculateDepartureTimeWithDelay(b);\r\n          return bDepartureTime - aDepartureTime;\r\n        });\r\n\r\n        setTrains(sortedTrains);\r\n      })\r\n      .catch((error) => {\r\n        // Handle error\r\n        console.error('Error fetching trains:', error);\r\n      });\r\n  }, []);\r\n\r\n  const isTrainDepartingInNext30Minutes = (departureTime) => {\r\n    const now = new Date();\r\n    const departure = new Date(departureTime);\r\n    const minutesDifference = (departure - now) / 60000; // 1 minute = 60000 ms\r\n    return minutesDifference <= 30;\r\n  };\r\n\r\n  const calculateDepartureTimeWithDelay = (train) => {\r\n    const departure = new Date(train.departureTime);\r\n    const delayMinutes = train.delays ? train.delays : 0;\r\n    return departure.getTime() + delayMinutes * 60000; // 1 minute = 60000 ms\r\n  };\r\n\r\n  return (\r\n    <div className=\"all-trains-page\">\r\n      {trains.map((train) => (\r\n        <TrainCard key={train.id} train={train} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AllTrainsPage;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAExCD,SAAS,CAAC,MAAM;IACd;IACAQ,UAAU,CAACC,YAAY,CAAC,CAAC,CACtBC,IAAI,CAAEC,IAAI,IAAK;MACd;MACA,MAAMC,cAAc,GAAGD,IAAI,CAACE,MAAM,CAC/BC,KAAK,IAAKC,+BAA+B,CAACD,KAAK,CAACE,aAAa,CAAC,KAAK,KACtE,CAAC;MAED,MAAMC,YAAY,GAAGL,cAAc,CAACM,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK;QACjD;QACA,IAAID,CAAC,CAACE,MAAM,CAACC,OAAO,GAAGF,CAAC,CAACC,MAAM,CAACC,OAAO,EAAE,OAAO,CAAC,CAAC;QAClD,IAAIH,CAAC,CAACE,MAAM,CAACC,OAAO,GAAGF,CAAC,CAACC,MAAM,CAACC,OAAO,EAAE,OAAO,CAAC;QACjD;QACA,IAAIH,CAAC,CAACI,OAAO,GAAGH,CAAC,CAACG,OAAO,EAAE,OAAO,CAAC,CAAC;QACpC,IAAIJ,CAAC,CAACI,OAAO,GAAGH,CAAC,CAACG,OAAO,EAAE,OAAO,CAAC;QACnC;QACA,MAAMC,cAAc,GAAGC,+BAA+B,CAACN,CAAC,CAAC;QACzD,MAAMO,cAAc,GAAGD,+BAA+B,CAACL,CAAC,CAAC;QACzD,OAAOM,cAAc,GAAGF,cAAc;MACxC,CAAC,CAAC;MAEFjB,SAAS,CAACU,YAAY,CAAC;IACzB,CAAC,CAAC,CACDU,KAAK,CAAEC,KAAK,IAAK;MAChB;MACAC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAChD,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMb,+BAA+B,GAAIC,aAAa,IAAK;IACzD,MAAMc,GAAG,GAAG,IAAIC,IAAI,CAAC,CAAC;IACtB,MAAMC,SAAS,GAAG,IAAID,IAAI,CAACf,aAAa,CAAC;IACzC,MAAMiB,iBAAiB,GAAG,CAACD,SAAS,GAAGF,GAAG,IAAI,KAAK,CAAC,CAAC;IACrD,OAAOG,iBAAiB,IAAI,EAAE;EAChC,CAAC;EAED,MAAMR,+BAA+B,GAAIX,KAAK,IAAK;IACjD,MAAMkB,SAAS,GAAG,IAAID,IAAI,CAACjB,KAAK,CAACE,aAAa,CAAC;IAC/C,MAAMkB,YAAY,GAAGpB,KAAK,CAACqB,MAAM,GAAGrB,KAAK,CAACqB,MAAM,GAAG,CAAC;IACpD,OAAOH,SAAS,CAACI,OAAO,CAAC,CAAC,GAAGF,YAAY,GAAG,KAAK,CAAC,CAAC;EACrD,CAAC;;EAED,oBACE/B,OAAA;IAAKkC,SAAS,EAAC,iBAAiB;IAAAC,QAAA,EAC7BhC,MAAM,CAACiC,GAAG,CAAEzB,KAAK,iBAChBX,OAAA,CAACqC,SAAS;MAAgB1B,KAAK,EAAEA;IAAM,GAAvBA,KAAK,CAAC2B,EAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAiB,CAC1C;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACxC,EAAA,CArDID,aAAa;AAAA0C,EAAA,GAAb1C,aAAa;AAuDnB,eAAeA,aAAa;AAAC,IAAA0C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}